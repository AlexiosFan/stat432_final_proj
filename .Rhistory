knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(glmnet)
library(e1071)
library(umap)
library(randomForest)
library(MASS)
if (!require('this.path')) install.packages('this.path')
library(devtools)
library(this.path)
cur_dir2 = dirname(this.path())
cur_dir2
load(paste(cur_dir2, "/MyData.RData", sep = ""))
my_data <- MyDataSet
users <- users
train <- MyTrain
test <- MyTest
train_pca <- MyTrain_pca
test_pca <- MyTest_pca
train_rf <- MyTrain_RF
test_rf <- MyTest_RF
```{r}
rf_model <- randomForest(as.factor(train[,1]) ~ ., data = data.frame(train[,-1]))
rf_model
# importance
varImpPlot(rf_model)
```{r}
```{r}
```{r}
# use kmeans to do the clustering based on the umap result
kmeans_result <- kmeans(umap_result$layout, centers = 12)
```{r}
umap_result <- umap(train_pca[,1:2], n_neighbors = 15, n_components = 2, metric = "euclidean")
```{r}
plot(umap_result$layout, col = train[,1])
umap_result <- umap(train_pca[,1:2], n_neighbors = 15, n_components = 3, metric = "euclidean")
plot(umap_result$layout, col = train[,1])
# UMAP for the first 3 PCA
umap_result <- umap(train_pca[,1:3], n_neighbors = 15, n_components = 3, metric = "euclidean")
```{r}
plot(umap_result$layout, col = train[,1])
umap_result <- umap(train_pca[,1:2], n_neighbors = 15, n_components = 4, metric = "euclidean")
plot(umap_result$layout, col = train[,1])
umap_result <- umap(train_pca[,1:2], n_neighbors = 15, n_components = 5, metric = "euclidean")
plot(umap_result$layout, col = train[,1])
umap_result <- umap(train_pca[,1:2], n_neighbors = 20, n_components = 5, metric = "euclidean")
plot(umap_result$layout, col = train[,1])
umap_result <- umap(train_pca[,1:2], n_neighbors = 20, n_components = 2, metric = "euclidean")
plot(umap_result$layout, col = train[,1])
umap_result <- umap(train_pca[,1:2], n_neighbors = 25, n_components = 2, metric = "euclidean")
plot(umap_result$layout, col = train[,1])
umap_result <- umap(train_pca[,1:2], n_neighbors = 30, n_components = 2, metric = "euclidean")
plot(umap_result$layout, col = train[,1])
umap_result <- umap(train_pca[,1:2], n_neighbors = 35, n_components = 2, metric = "euclidean")
plot(umap_result$layout, col = train[,1])
umap_result <- umap(train_pca[,1:2], n_neighbors = 35, n_components = 3, metric = "euclidean")
plot(umap_result$layout, col = train[,1])
umap_result <- umap(train_pca[,1:2], n_neighbors = 35, n_components = 4, metric = "euclidean")
plot(umap_result$layout, col = train[,1])
umap_result <- umap(train_pca[,1:2], n_neighbors = 35, n_components = 5, metric = "euclidean")
plot(umap_result$layout, col = train[,1])
umap_result <- umap(train_pca[,1:2], n_neighbors = 20, n_components = 5, metric = "euclidean")
plot(umap_result$layout, col = train[,1])
umap_result <- umap(train_pca[,1:2], n_neighbors = 20, n_components = 4, metric = "euclidean")
plot(umap_result$layout, col = train[,1])
# UMAP for the first 3 PCA
umap_result <- umap(train_pca[,1:2], n_neighbors = 35, n_components = 3, metric = "euclidean")
plot(umap_result$layout, col = train[,1])
umap_result <- umap(train_pca[,1:2], n_neighbors = 50, n_components = 3, metric = "euclidean")
plot(umap_result$layout, col = train[,1])
umap_result <- umap(train_pca[,1:2], n_neighbors = 50, n_components = 2, metric = "euclidean")
plot(umap_result$layout, col = train[,1])
x <- predict(umap_result, test_pca[,1:2])
kmeans_result <- kmeans(umap_result$layout, centers = 12)
plot(umap_result$layout, col = kmeans_result$cluster)
table(kmeans_result$cluster, train[,1])
umap_result <- umap(train_pca[,1:2], n_neighbors = 50, n_components = 2, metric = "euclidean")
plot(umap_result$layout, col = train[,1])
plot(umap_result$layout, col = train[,1])
```{r}
pca <- prcomp(train[,-1], center = TRUE, scale. = TRUE)
plot(pca, type = "l")
